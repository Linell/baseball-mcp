[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "baseball-mcp"
version = "0.1.0"
description = "MCP server for retrieving baseball information"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Linell Bonnette", email = "tlbonnette@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp>=1.0.0",
    "pybaseball>=2.2.0",
    "asyncio-mqtt>=0.11.0",
    "pydantic>=2.0.0",
    "pandas>=2.2.0",
    "SQLAlchemy>=2.0.0",
    "typer>=0.9.0",
    "fastapi>=0.110.0",
    "uvicorn[standard]>=0.22.0",
    "tabulate>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/baseball-mcp"
Repository = "https://github.com/yourusername/baseball-mcp"
Issues = "https://github.com/yourusername/baseball-mcp/issues"

[project.scripts]
baseball-mcp = "baseball_mcp.cli:main"

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]

[tool.coverage.report]
show_missing = true
skip_covered = false 